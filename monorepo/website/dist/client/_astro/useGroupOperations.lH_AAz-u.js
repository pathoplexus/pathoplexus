import{G as n,z as U,n as d,b as v,d as c,c as l,t as b,Q as A}from"./createAuthorizationHeader.D0lXW5f5.js";import{r as i}from"./index.BOC3FD3Q.js";import{z as G,g as h,n as z,c as E}from"./lapis.BMBLPoxt.js";import{s as g}from"./stringifyMaybeAxiosError.Dyiug7p6.js";const R=n({method:"post",path:"/groups",alias:"createGroup",parameters:[c,{name:"data",type:"Body",schema:z}],response:h,errors:[d,v]}),$=n({method:"put",path:"/groups/:groupId",alias:"editGroup",parameters:[c,{name:"data",type:"Body",schema:z}],response:h,errors:[d]}),C=n({method:"put",path:"/groups/:groupId/users/:userToAdd",alias:"addUserToGroup",parameters:[c],response:G.never(),errors:[d,v]}),I=n({method:"delete",path:"/groups/:groupId/users/:userToRemove",alias:"removeUserFromGroup",parameters:[c],response:G.never(),errors:[d]}),H=n({method:"get",path:"/groups/:groupId",alias:"getGroupDetails",parameters:[c],response:E,errors:[d]}),D=n({method:"get",path:"/user/groups",alias:"getGroupsOfUser",parameters:[c],response:G.array(h),errors:[d]}),x=n({method:"get",path:"/groups",alias:"getAllGroups",parameters:[c],response:G.array(h),errors:[d]}),M=U([R,$,C,I,H,D,x]),j=({clientConfig:o,accessToken:r,setErrorMessage:e,prefetchedGroupDetails:s})=>{const t=s.group.groupName,a=s.group.groupId,{zodios:u,zodiosHooks:m}=f(o),p=m.useGetGroupDetails({headers:l(r),params:{groupId:a}},{enabled:!1,initialData:s});p.error&&e(`Failed to query Group ${t}: ${g(p.error)}`);const w=i.useCallback(async y=>{await N(r,e,u,p.refetch)(a,y)},[r,e,p.refetch,u,a]),F=i.useCallback(async y=>{await B(r,e,u,p.refetch)(a,y)},[r,e,p.refetch,u,a]);return{addUserToGroup:w,removeFromGroup:F,groupDetails:p}},J=({clientConfig:o,accessToken:r})=>{const{zodios:e}=f(o);return{createGroup:i.useCallback(async t=>T(r,e)(t),[r,e])}},K=({clientConfig:o,accessToken:r})=>{const{zodios:e}=f(o);return{editGroup:i.useCallback(async(t,a)=>k(r,e)(t,a),[r,e])}},f=o=>{const r=i.useMemo(()=>new b(o.backendUrl,M),[o]),e=i.useMemo(()=>new A("loculus",r),[r]);return{zodios:r,zodiosHooks:e}};function T(o,r){return async e=>{try{return{succeeded:!0,group:await r.createGroup(e,{headers:l(o)})}}catch(s){return{succeeded:!1,errorMessage:`Failed to create group: ${g(s)}`}}}}function k(o,r){return async(e,s)=>{try{return{succeeded:!0,group:await r.editGroup(s,{headers:l(o),params:{groupId:e}})}}catch(t){return{succeeded:!1,errorMessage:`Failed to edit group: ${g(t)}`}}}}function B(o,r,e,s){return async(t,a)=>{try{await e.removeUserFromGroup(void 0,{headers:l(o),params:{groupId:t,userToRemove:a}}),await s()}catch(u){const m=`Failed to leave group: ${g(u)}`;r(m)}}}function N(o,r,e,s){return async(t,a)=>{try{await e.addUserToGroup(void 0,{headers:l(o),params:{groupId:t,userToAdd:a}}),await s()}catch(u){const m=`Failed to add user to group: ${g(u)}`;r(m)}}}export{J as a,j as b,K as u};
